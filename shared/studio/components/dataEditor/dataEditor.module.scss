@import "@edgedb/common/mixins.scss";

.dataEditor {
  position: relative;
  flex-grow: 1;
  height: max-content;
  min-height: 100%;
  display: flex;
  align-items: center;

  z-index: 1;
  filter: drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.25));

  &.showBackground {
    background: #f5f5f5;
    border-radius: 4px 0 0 4px;

    @include darkTheme {
      background: #262626;
    }
  }
}

.actions {
  position: absolute;
  top: 0;
  height: 32px;
  left: 100%;
  display: flex;
  align-items: center;
  background: #fff;
  border-radius: 0 4px 4px 0;

  .action {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;

    svg {
      fill: #fff;
    }

    &:last-child {
      border-radius: 0 4px 4px 0;
    }

    &.actionDisabled {
      pointer-events: none;
      opacity: 0.4;
    }
  }

  .emptySetAction {
    background: #e5c18c;
  }
  .submitChangesAction {
    background: #49d8ad;
  }

  @include darkTheme {
    background: #141414;

    .action svg {
      fill: #141414;
    }

    .emptySetAction {
      background: #a1843d;
    }
    .submitChangesAction {
      background: #29b189;
    }
  }
}

@mixin inputLabel {
  &:before {
    position: absolute;
    top: 0;
    right: 0;
    height: 15px;
    border-radius: 0 0 0 4px;
    padding: 0 2px 0 4px;
    line-height: 15px;
    font-family: "Roboto Mono";
    font-style: normal;
    font-weight: 400;
    font-size: 10px;
    color: #666;
    background: #d2d2d2;
    pointer-events: none;

    @include darkTheme {
      background-color: #656565;
      color: #e4e4e4;
    }
  }
}

.textbox {
  flex-grow: 1;
  display: flex;
  position: relative;
  min-width: 0;

  @include inputLabel;

  &:before {
    content: attr(data-input-type);
    border-radius: 0 3px 0 4px;
    transition: opacity 0.2s linear;
  }

  &:focus-within,
  &.active {
    input,
    textarea {
      border-color: #468bff;
    }

    &:before {
      background: #468bff;
      color: #fff;
      opacity: 0;
    }
  }

  &.error {
    input,
    textarea {
      border-color: #d78d87;
    }

    &:before {
      background: #d78d87;
      color: #fff;
    }
  }

  input,
  textarea {
    flex-grow: 1;
    appearance: none;
    box-sizing: border-box;
    background: var(--inputBg, #fafafa);
    outline: none;
    border: 2px solid #d2d2d2;
    border-radius: 4px;
    padding: 3px 6px;
    margin: 0;
    font-family: Roboto Mono;
    font-size: 14px;
    line-height: 22px;
    min-height: 32px;
    white-space: pre;
    @include hideScrollbar;
  }

  @include darkTheme {
    input,
    textarea {
      background: var(--inputBg, #141414);
      color: #adadad;
      border-color: #656565;
    }

    &:focus-within,
    &.active {
      input,
      textarea {
        border-color: #468bff;
      }

      &:before {
        background: #468bff;
      }
    }

    &.error {
      input,
      textarea {
        border-color: #af6963;
      }

      &:before {
        background: #af6963;
      }
    }
  }

  input:focus + .errMessage,
  textarea:focus + .errMessage {
    display: block;
  }

  .dataEditor > & {
    input,
    textarea {
      border-radius: 4px 0 0 4px;
    }
  }
}

.errMessage {
  position: absolute;
  top: 100%;
  left: 0;
  margin: 4px 0;
  background: #d78d87;
  color: #fff;
  border-radius: 4px;
  padding: 4px 6px;
  line-height: 20px;
  z-index: 1;
  display: none;

  @include darkTheme {
    background: #af6963;
    color: #141414;
  }

  .errorMessageAbove & {
    top: unset;
    bottom: 100%;
  }
}

.boolEditor {
  display: flex;
  align-items: center;
  height: 32px;
  font-weight: 500;

  &.topLevel {
    background: #fafafa;
    flex-grow: 1;
    padding: 0 6px;
    border-radius: 4px 0 0 4px;

    @include darkTheme {
      background: #141414;
    }
  }

  div {
    font-family: Roboto Mono;
    line-height: 22px;
    border-radius: 14px;
    color: #808080;
    padding: 0 8px;
    cursor: pointer;

    &:not(:last-child) {
      margin-right: 6px;
    }

    @include darkTheme {
      color: #747474;
    }
  }

  .boolSelected {
    background: #f5f5f5;
    color: #4c4c4c;

    @include darkTheme {
      background: #747474;
      color: #141414;
    }
  }
}

.panel {
  position: relative;
  background: #e8e8e8;
  border: 2px solid #d2d2d2;
  border-radius: 4px;
  padding: 10px;
  padding-top: 24px;
  min-width: max-content;

  @include inputLabel;

  &.panelNested {
    background: #f7f7f7;
  }

  @include darkTheme {
    background: #262626;
    border-color: #656565;

    &.panelNested {
      background: #333;
    }
  }
}

.emptyValue {
  opacity: 0.6;
  margin-right: 8px;
}

.nullButton {
  cursor: pointer;
  background: #fafafa;
  padding: 0 6px;
  margin-left: 8px;
  line-height: 32px;
  border-radius: 4px;
  align-self: flex-start;
  width: max-content;

  &.disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  @include darkTheme {
    background: #141414;
  }
}

.removeButton {
  width: 32px;
  height: 32px;
  background: #d2d2d2;
  border-radius: 0 4px 4px 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  svg {
    fill: #666;
  }

  &:hover {
    background: #468bff;

    svg {
      fill: #f7f7f7;
    }
  }

  @include darkTheme {
    background: #656565;

    svg {
      fill: #bfbfbf;
    }

    &:hover {
      background: #468bff;

      svg {
        fill: #f7f7f7;
      }
    }
  }
}

.addButton {
  border: 2px dashed #a6a6a6;
  color: #a6a6a6;
  border-radius: 4px;
  height: 28px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 3px;
  flex-grow: 1;
  cursor: pointer;
}

.tupleEditor {
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  &:before {
    content: "tuple";
  }

  .tupleElement {
    display: flex;
    line-height: 30px;

    .tupleElementName {
      font-family: Roboto Mono;
      flex-shrink: 0;
      margin-right: 6px;

      span {
        opacity: 0.7;
        margin-left: 3px;
      }
    }

    &:not(:last-child) {
      margin-bottom: 8px;
    }
  }
}

.arrayEditor {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 180px;

  &:before {
    content: "array";
  }

  &.isMulti {
    &:before {
      content: "multi";
    }
  }

  .arrayItem {
    display: flex;
    align-items: flex-start;
    line-height: 30px;

    & > .textbox > textarea,
    & > .textbox > input {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    & > .panel {
      border-top-right-radius: 0;
    }

    &:not(:last-child) {
      margin-bottom: 8px;
    }
  }
}

.rangeEditor {
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  &:before {
    content: "range";
  }

  .rangeBound {
    display: flex;
    align-items: center;
    line-height: 30px;

    &:not(:last-child) {
      margin-bottom: 6px;
    }
  }

  .incBounds {
    line-height: 30px;

    & > span {
      font-family: Roboto Mono, monospace;
      opacity: 0.7;
    }

    label {
      input {
        display: none;
      }

      span:before {
        content: "false";
        font-family: Roboto Mono;
        line-height: 22px;
        border: 1px solid rgba(0, 0, 0, 0.5);
        border-radius: 14px;
        padding: 0 8px;
        cursor: pointer;
        opacity: 0.8;
        margin: 0 3px;

        @include darkTheme {
          border-color: rgba(255, 255, 255, 0.5);
        }
      }

      input:checked + span:before {
        content: "true";
        background: var(--app-accent-green);
        border-color: transparent;
        color: #fff;
      }
    }
  }
}

.enumSelect {
  background: var(--inputBg, #fafafa);
  flex-grow: 1;
  min-height: 32px;
  padding: 0 8px;
  display: flex;
  justify-content: space-between;
  font-weight: 500;
  line-height: 20px;

  &:hover {
    background: var(--inputBg, #fafafa) !important;
  }

  .dataEditor > & {
    border-radius: 4px 0 0 4px;
  }

  @include darkTheme {
    background: var(--inputBg, #141414);

    &:hover {
      background: var(--inputBg, #141414) !important;
    }
  }
}
